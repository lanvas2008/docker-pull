name: Go Release

on:
  push:
    branches: [ "release" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.21' # 使用你的 Go 版本

    - name: Build
      run: go build -o docker-pull ./core


    - name: Prepare Release
      id: prepare_release
      run: |
        VERSION=$(cat VERSION) # 假设你的版本信息在 VERSION 文件中
        echo ::set-output name=version::$VERSION

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.prepare_release.outputs.version }}
        release_name: Release ${{ steps.prepare_release.outputs.version }}
        body: |
          Changes in this version include:
          - Update to version ${{ steps.prepare_release.outputs.version }}

    - name: Upload Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.prepare_release.outputs.version }}/docker-pull
        asset_name: docker-pull
        asset_content_type: application/octet-stream
