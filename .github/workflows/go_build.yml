# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Release

on:
  push:
    branches: [ "release" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.21'

    - name: Build
      run: cd ./core && go build -o ../docker-pull .

    

    - name: Prepare Release
      id: prepare_release
      run: |
        VERSION=$(cat VERSION)
        echo ::set-output name=version::$VERSION

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.prepare_release.outputs.version }}
        release_name: Release ${{ steps.prepare_release.outputs.version }}

    - name: Upload Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./docker-pull
        asset_name: docker-pull
        asset_content_type: application/octet-stream
